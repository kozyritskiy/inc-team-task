{"version":3,"sources":["components/header/logo.png","components/login/index.js","components/login/login.js","components/register/index.js","components/register/register.js","components/head-row/index.js","components/entry/entry.js","components/head-row/head-row.js","components/body-row/index.js","components/body-row/body-row.js","components/table-body/index.js","components/table-body/table-body.js","components/table/index.js","components/table/table.js","components/header/index.js","components/header/header.js","components/btns/btns.js","components/controls/controls.js","components/pages/members.js","components/pages/tasks.js","components/pages/members-task.js","components/pages/progress.js","components/pages/track.js","components/pages/welcome.js","components/hoc-helpers/index.js","components/hoc-helpers/with-popup.js","components/forms/member-detail-form.js","components/forms/task-detail-form.js","components/forms/task-track-detail-form.js","components/forms/forms.js","services/dummy-service.js","components/app/index.js","components/app/app.js","index.js"],"names":["module","exports","__webpack_require__","p","Login","react_default","a","createElement","className","action","method","type","name","placeholder","Component","Register","HeadRow","_ref","items","control","uniqId","length","headRow","_items$","itemProps","id","Object","objectWithoutProperties","elements","keys","map","propName","key","str","toUpperCase","slice","concat","toConsumableArray","BodyRow","idx","dataItems","clazzName","item","cloneControl","React","Children","child","cloneElement","bodyRow","TableBody","propsValue","values","components_body_row","Table","data","this","props","children","components_head_row","components_table_body","Header","react_router_dom","to","RegBtn","togglePopup","onClick","CreateBtn","_ref2","clearCurrentItem","ControlMembersManage","onItemDelete","onItemEdit","getUserTasks","getUserName","getUserProgress","ControlTasksManage","getTaskId","ControlTaskTracksManage","_ref3","ControlAdmin","_ref4","toggleStatus","getUserTrack","getCurrentTrackId","taskId","Members","_this$props","membersManage","btns_RegBtn","components_table","controls_ControlMembersManage","Tasks","tasksManage","btns_CreateBtn","controls_ControlTasksManage","MembersTask","currentUserName","controls_ControlAdmin","Progress","memberProgress","Track","currentUserTrack","controls_ControlTaskTracksManage","Welcome","count","state","figure","changeTriangles","_this","setState","interval","setInterval","clearInterval","divArray","i","someDiv","push","Popup","View","_Component","_class","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","MemberDetailForm","maxId","userId","lastName","direction","education","start","sex","birthdate","address","mobile","skype","telegram","email","math","score","onChange","e","target","defineProperty","getAge","birth","Date","getFullYear","onSubmit","preventDefault","onItemAdd","closePopup","creator","typeOfItem","typeOfCurrentItem","_this$state","yearOfBirth","substring","userAge","onBackToGrid","_this$props2","prevProps","currentItem","_this$props$currentIt","formTitle","_this$state2","_this$props3","openEdit","openRegister","htmlFor","required","TaskDetailForm","description","startDate","deadlineDate","members","checkedMembers","result","member","onChangeCheck","objectSpread","addUserTasks","forEach","taskName","checkedUsers","openCreate","rows","cols","task_detail_form_CheckMembers","CheckMembers","checkMembers","reduce","checkMembersChange","checks","checked","TaskTrackDetailForm","taskTrackId","trackNote","trackDate","currentTrackId","console","log","openTrack","MemberForm","withPopup","TaskForm","TaskTrackForm","DummyService","users","age","fullUsers","tasks","userTasks","userProgresses","taskTracks","trackId","tracks","getTrack","_callee","regenerator_default","wrap","_context","prev","next","abrupt","find","stop","getTaskTracks","_callee2","_context2","_callee3","_context3","_callee4","_context4","getTasks","_callee5","_context5","getTask","_callee6","_context6","getUsers","_callee7","_context7","getUser","_callee8","_context8","App","service","isAdmin","showPopup","openEditReg","openEditCrt","openEditTrack","currentMemberProgress","currentUserTasks","currentMember","currentTask","currentTrack","membersTaskManage","taskTracksManage","userTrack","filter","task","userProgress","progress","user","status","editTasks","typeOfItems","_len2","property","Array","_key2","editItem","findIndex","then","remaneIdObj","form","_this2","res","renameId","_this3","memberForm","createMember","bind","taskForm","createTask","trackForm","createTrack","components_header","react_router","path","render","welcome_Welcome","exact","members_Members","tasks_Tasks","members_task_MembersTask","progress_Progress","track_Track","root","document","getElementById","ReactDOM","components_app"],"mappings":"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","file":"static/js/main.ba79f81d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ca829366.png\";","import Login from \"./login\";\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\n\r\n\r\nexport default class Login extends Component {\r\n  render() {\r\n    return (\r\n        <form className='form-login' action=\"\" method=''>\r\n            <h3 className='form-title'>Welcome back to Login Page</h3>\r\n            <fieldset>\r\n                <div className='form-group'>\r\n                    <input type=\"text\" name='name' placeholder='Username'/>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input type=\"password\" name='password' placeholder='Password'/>\r\n                </div>\r\n                <div className='submit'>\r\n                    <button className='submit-btn' type='submit'>ENTER</button>\r\n                </div>\r\n            </fieldset>\r\n        </form>\r\n    )\r\n  }\r\n}\r\n","import Register from \"./register\";\r\n\r\nexport default Register;\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Register extends Component {\r\n  render() {\r\n    return (\r\n    <form className='form-login' action=\"\" method=''>\r\n        <h3 className='form-title'>Welcome to Register Page</h3>\r\n        <fieldset>\r\n            <div className='form-group'>\r\n                <input type=\"text\" name='name' placeholder='Username'/>\r\n            </div>\r\n            <div className='form-group'>\r\n                <input type=\"password\" name='password' placeholder='Password'/>\r\n            </div>\r\n            <div className='submit'>\r\n                <button className='submit-btn' type='submit'>ENTER</button>\r\n            </div>\r\n        </fieldset>\r\n    </form>\r\n    )\r\n  }\r\n}\r\n","import HeadRow from \"./head-row\";\r\n\r\nexport default HeadRow;","import React, { Component } from 'react'\r\n\r\nimport Login from '../login'\r\nimport Register from '../register'\r\n\r\nimport {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom';\r\n\r\nexport default class Entry extends Component {\r\n  render() {\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <header className='form-header'>\r\n                    <div className='form-logo'>LOGO</div>\r\n                    <nav className='form-nav'>\r\n                        <ul>\r\n                            <li>\r\n                                <Link to=\"/register\">Register</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/login\">Login</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                </header>\r\n                \r\n                <Switch>\r\n                    <Route path='/login' component={Login}/>\r\n                    <Route path='/register' component={Register}/>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nconst capitalize = (str) => str && str[0].toUpperCase() + str.slice(1);\r\n\r\nconst HeadRow = ({items, control}) => {\r\n    const isAdmin = true;\r\n    let uniqId = 7000;\r\n    if(items.length === 0){\r\n      return <tr>\r\n        <th>Table is EMPTY</th>\r\n      </tr>;\r\n    }\r\n    const {id, ...itemProps } = items[0];\r\n    const propsName = Object.keys(itemProps);\r\n    const elements = propsName.map((propName) => {\r\n      return <th key={++uniqId} className=\"thead-ceil\">{capitalize(propName)}</th>;\r\n    });\r\n    let headRow;\r\n    if (isAdmin && control && typeof(control.type) === 'symbol') {\r\n        headRow = [<th key={++uniqId} className=\"thead-ceil\">#</th>, \r\n                    ...elements,\r\n                    <th key={'control-ceil'} className=\"thead-ceil\">Control</th>,\r\n                    <th key={'control-admin-ceil'} className=\"thead-ceil\">Admin</th>];\r\n    } else {\r\n        !control ? \r\n            headRow = [<th key={++uniqId} className=\"thead-ceil\">#</th>, ...elements] :\r\n            headRow = [<th key={++uniqId} className=\"thead-ceil\">#</th>, \r\n                        ...elements,\r\n                        <th key={'control-ceil'} className=\"thead-ceil\">Control</th>];\r\n    }\r\n    return (<tr className=\"thead-row\">{ headRow }</tr>);\r\n  };\r\n\r\n  export default HeadRow;","import BodyRow from \"./body-row\";\r\n\r\nexport default BodyRow;","import React from 'react'\r\n\r\nconst BodyRow = ({items,idx,control,id,dataItems}) => {\r\n    let uniqId = 5000;\r\n    let clazzName = 'tbody-ceil';\r\n    const elements = items.map((item) => {\r\n      item === 'Fail' ? clazzName += ' tbody-ceil_color_fail' :\r\n      item === 'Success' ? clazzName += ' tbody-ceil_color_success' :\r\n      item === 'Active' ? clazzName += ' tbody-ceil_color_active' : clazzName += '';\r\n      \r\n      return <td key={++uniqId} className={clazzName}>{item}</td>;\r\n    });\r\n    const cloneControl = React.Children.map(control,(child) => {\r\n      return React.cloneElement(child, {id, dataItems})\r\n    })\r\n    \r\n    const bodyRow = [<td key={idx} className=\"tbody-ceil\">{idx+1}</td>, ...elements, cloneControl];\r\n    \r\n    \r\n    return (<tr className=\"tbody-row\">{ bodyRow }</tr>);\r\n  };\r\n\r\nexport default BodyRow;","import TableBody from \"./table-body\";\r\n\r\nexport default TableBody;","import React from 'react'\r\n\r\nimport BodyRow from '../body-row'\r\n\r\nconst TableBody = ({items ,control}) => {\r\n    let uniqId = 6000;\r\n    const elements = items.map((item,idx) => {\r\n      const { id, ...itemProps } = item;\r\n      \r\n      \r\n      const propsValue = Object.values(itemProps);\r\n      return <BodyRow key={++uniqId} \r\n                      items={propsValue} \r\n                      idx={idx} \r\n                      id={id} \r\n                      control={control}\r\n                      dataItems={items}></BodyRow>;\r\n    });\r\n    return (<tbody className=\"tbody\">{ elements }</tbody>);\r\n  };\r\n\r\nexport default TableBody;","import Table from \"./table\";\r\n\r\nexport default Table;","import React, { Component } from 'react';\r\n\r\nimport HeadRow from '../head-row';\r\nimport TableBody from '../table-body';\r\n\r\nimport './table.scss';\r\n\r\nexport default class Table extends Component {\r\n\r\n  render() {\r\n    const {data} = this.props;\r\n    const control = this.props.children;\r\n    \r\n    return (\r\n            <table className='table'>\r\n                <thead>\r\n                    <HeadRow items={data} control={control}></HeadRow>\r\n                </thead>\r\n                <TableBody items={data} control={control}/>\r\n            </table>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import Header from \"./header\";\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nimport {Link } from 'react-router-dom';\r\n\r\nimport \"./header.scss\";\r\nimport logo from './logo.png';\r\n\r\nconst Header = () => {\r\n    return (\r\n          <header className='header'>\r\n                <div className='header__container container'>\r\n                    <div className='header__logo'>\r\n                        <Link className='header__logo-link' to=\"/\">\r\n                            <h1 className='header__logo-title'>LOGO</h1>\r\n                        </Link>\r\n                    </div>\r\n                    <nav className='header__nav'>\r\n                        <ul className='header__list'>\r\n                            <li className='header__item'><Link className='header__link' to=\"/members\">MEMBERS</Link></li>\r\n                            <li className='header__item'><Link className='header__link' to=\"/tasks\">TASKS</Link></li>\r\n                        </ul>\r\n                        <ul className='header__list'>\r\n                            <li className=\"header__item\">\r\n                                <div className=\"btn\"><button>REGISTER</button></div>\r\n                            </li>\r\n                            <li className=\"header__item\">\r\n                                <div className=\"btn\"><button>LOGIN</button></div>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </header>\r\n      )\r\n    }\r\n\r\nexport default Header;\r\n\r\n","import React from 'react';\r\n\r\nimport './btns.scss';\r\n\r\nconst RegBtn = ({togglePopup}) => {\r\n    return (\r\n        <button className='btn-reg' onClick={() => togglePopup('member')}>Register</button>\r\n    )\r\n};\r\nconst CreateBtn = ({togglePopup,clearCurrentItem}) => {\r\n    return (\r\n        <button className='btn-crt' onClick={() => {togglePopup('task');clearCurrentItem('checkedUsers')}}>Create</button>\r\n    )\r\n};\r\nconst TrackBtn = ({togglePopup}) => {\r\n    return (\r\n        <button onClick={() => togglePopup('track')}>Track</button>\r\n    )\r\n};\r\n\r\nexport { RegBtn, CreateBtn, TrackBtn}","import React from 'react';\r\nimport {Link } from 'react-router-dom';\r\n\r\nconst ControlMembersManage = ({onItemDelete,onItemEdit,id,togglePopup,dataItems,getUserTasks, getUserName, getUserProgress}) => {\r\n    return (<td className='control-ceil tbody-ceil'>\r\n        <div className='control-ceil__links'>\r\n            <Link onClick={() => {getUserProgress(id);getUserName(id)}} className='control-ceil__link' to=\"/user-progress\">Progress</Link>\r\n            <Link onClick={() => {getUserTasks(id);getUserName(id)}} className='control-ceil__link'  to=\"/user-tasks\">Tasks</Link>\r\n        </div>\r\n        <div className='control-ceil__btns'>\r\n            <button className='control-ceil__btn'  onClick={() => {togglePopup('editReg');onItemEdit(id, dataItems,'currentMember')}}>Edit</button>\r\n            <button className='control-ceil__btn control-ceil__btn_color_delete'  onClick={() =>onItemDelete(id, 'membersManage')}>Delete</button>\r\n        </div>\r\n    </td>);\r\n  };\r\n\r\nconst ControlTasksManage = ({onItemDelete,onItemEdit,id,togglePopup,dataItems,getTaskId}) => {\r\n    return (<td className='control-ceil tbody-ceil'>\r\n                <div className='control-ceil__btns'>\r\n                    <button className='control-ceil__btn' onClick={() => {togglePopup('editCrt');onItemEdit(id, dataItems,'currentTask');getTaskId(id)}}>Edit</button>\r\n                    <button className='control-ceil__btn control-ceil__btn_color_delete' onClick={() => onItemDelete(id, 'tasksManage')}>Delete</button>\r\n                </div>\r\n            </td>);\r\n};\r\n\r\nconst ControlTaskTracksManage = ({onItemDelete,onItemEdit,id,togglePopup,dataItems}) => {\r\n    return (<td className='control-ceil tbody-ceil'>\r\n        <div className='control-ceil__btns'>\r\n                <button className='control-ceil__btn' onClick={() => {togglePopup('editTrack');onItemEdit(id, dataItems,'currentTrack')}}>Edit</button>\r\n                <button className='control-ceil__btn control-ceil__btn_color_delete' onClick={() => {onItemDelete(id, 'taskTracksManage');onItemDelete(id, 'currentUserTrack')}}>Delete</button>\r\n        </div>\r\n    </td>);\r\n};\r\n\r\nconst ControlAdmin = ({id,toggleStatus,togglePopup,getUserTrack,getCurrentTrackId}) => {\r\n    return (<td className='control-ceil tbody-ceil'>\r\n        <div>\r\n            <div className='control-ceil__track'>\r\n                <button className='control-ceil__btn' onClick={() => {togglePopup('track');getCurrentTrackId(id)}}>Set Track</button>\r\n                <Link className='control-ceil__btn' onClick={() => getUserTrack(id.taskId)} to=\"/user-track\">Get Track</Link>\r\n            </div>\r\n            <div className='control-ceil__btns control-ceil__btns_admin'>\r\n                <button onClick={() => toggleStatus(id.taskId, 'Success')}  className='control-ceil__btn  control-ceil__btn_color_success'>Success</button>\r\n                <button onClick={() => toggleStatus(id.taskId, 'Fail')}  className='control-ceil__btn control-ceil__btn_color_delete'>Fail</button>\r\n            </div>\r\n        </div>\r\n        \r\n    </td>);\r\n};\r\n\r\nexport {ControlMembersManage,\r\n        ControlTasksManage,\r\n        ControlTaskTracksManage,\r\n        ControlAdmin}","import React, { Component } from 'react';\r\n\r\nimport {RegBtn} from '../btns';\r\nimport Table from '../table';\r\nimport {ControlMembersManage} from '../controls';\r\n\r\nimport './members.scss';\r\n\r\nexport default class Members extends Component {\r\n  render() {\r\n    const {membersManage,\r\n            togglePopup,\r\n            onItemDelete,\r\n            onItemEdit,\r\n            getUserTasks,\r\n            getUserName,\r\n            getUserProgress} = this.props;\r\n    return (\r\n      <div className='members'>\r\n        <div className='members__header'>\r\n            <div className='members__count'>MEMBERS OF INCUBATOR</div>\r\n            <RegBtn togglePopup={togglePopup}/>\r\n        </div>\r\n        <Table data={membersManage}>\r\n            <ControlMembersManage \r\n                onItemDelete={onItemDelete}\r\n                onItemEdit={onItemEdit}\r\n                togglePopup={togglePopup}\r\n                getUserTasks={getUserTasks}\r\n                getUserName={getUserName}\r\n                getUserProgress={getUserProgress}/>\r\n        </Table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport {CreateBtn} from '../btns'\r\nimport Table from '../table'\r\nimport {ControlTasksManage} from '../controls'\r\n\r\nexport default class Tasks extends Component {\r\n  render() {\r\n    const {tasksManage,\r\n            togglePopup,\r\n            onItemDelete,\r\n            onItemEdit,\r\n            getTaskId,clearCurrentItem} = this.props;\r\n    return (\r\n      <div className='tasks'>\r\n        <div className='tasks__header'>\r\n            <div className='tasks__count'>AVAILABLE TASKS</div>\r\n            <CreateBtn togglePopup={togglePopup} clearCurrentItem={clearCurrentItem}/>\r\n        </div>\r\n        <Table data={tasksManage}>\r\n            <ControlTasksManage \r\n                onItemDelete={onItemDelete}\r\n                onItemEdit={onItemEdit}\r\n                togglePopup={togglePopup}\r\n                getTaskId={getTaskId}/>\r\n        </Table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport {Link } from 'react-router-dom';\r\nimport Table from '../table';\r\n\r\nimport {ControlAdmin} from '../controls';\r\n\r\nimport './members-task.scss';\r\n\r\nexport default class MembersTask extends Component {\r\n    \r\n  render() {\r\n    const {data,toggleStatus,currentUserName,togglePopup,getUserTrack,getCurrentTrackId} = this.props;\r\n  \r\n    return (\r\n        <div className='members-task'>\r\n            <div className='members-task__header'>\r\n                <h3 className='members-task__tittle'>Hi, dear {currentUserName}! This is your current tasks:</h3>\r\n                <Link className='members-task__link' to=\"/members\">Back</Link>\r\n            </div>\r\n            <Table data={data}><ControlAdmin togglePopup={togglePopup} \r\n                                            toggleStatus={toggleStatus} \r\n                                            getUserTrack={getUserTrack}\r\n                                            getCurrentTrackId={getCurrentTrackId}/>\r\n            </Table>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport {Link } from 'react-router-dom';\r\nimport Table from '../table';\r\n\r\nexport default class Progress extends Component {\r\n  render() {\r\n    \r\n    const {memberProgress,currentUserName} = this.props;\r\n\r\n    return (\r\n        <div className='members-task'>\r\n            <div className='members-task__header'>\r\n                <h3 className='members-task__tittle'>{currentUserName}'s progress:</h3>\r\n                <Link className='members-task__link' to=\"/members\">Back</Link>\r\n            </div>\r\n            <Table data={memberProgress}/>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport {Link } from 'react-router-dom';\r\nimport Table from '../table';\r\n\r\nimport {ControlTaskTracksManage} from '../controls';\r\n\r\nexport default class Track extends Component {\r\n  render() {\r\n\r\n    const {onItemDelete,onItemEdit,togglePopup,currentUserTrack} = this.props;\r\n\r\n    return (\r\n        <div className='members-task'>\r\n            <div className='members-task__header'>\r\n                <h3 className='members-task__tittle'>This is your task tracks:</h3>\r\n                <Link className='members-task__link' to=\"/user-tasks\">Back</Link>\r\n            </div>\r\n            <Table data={currentUserTrack}>\r\n                <ControlTaskTracksManage\r\n                    onItemDelete={onItemDelete}\r\n                    onItemEdit={onItemEdit}\r\n                    togglePopup={togglePopup}/>\r\n            </Table>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\n\r\nimport './welcome.scss'\r\n\r\nexport default class Welcome extends Component {\r\n    count = 0;\r\n    state = {\r\n        figure: 'is-egg'\r\n    }\r\n\r\n    changeTriangles = () => {\r\n        this.count++;\r\n        const classes = ['is-egg','is-react','is-net','is-js','is-css'];\r\n        if (this.count > 4){\r\n            this.count = 0;\r\n        }\r\n        this.setState({ figure: classes[this.count]});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.interval = setInterval(this.changeTriangles, 2000);\r\n      }\r\n      componentWillUnmount() {\r\n        clearInterval(this.interval);\r\n      }\r\n\r\n  render() {\r\n\r\n    const {figure} = this.state;\r\n    const clazzName = `canvas ${figure}`\r\n    let divArray = [];\r\n    for (let i = 1; i < 103; i++) {\r\n        const clazzName = `p${i}`;\r\n        const someDiv = <div key={i} className={clazzName}></div>\r\n        divArray.push(someDiv)\r\n    }\r\n    return <div className={clazzName}>{divArray}</div>;\r\n\r\n  }\r\n}","import Popup from \"./with-popup\";\r\n\r\nexport default Popup;","import React, { Component } from 'react'\r\n\r\nimport \"./with-popup.scss\";\r\n\r\nconst withPopup = (View) => {\r\n    return class extends Component {\r\n        render() {\r\n            return(\r\n                <div className='popup'>\r\n                    <div className='popup_inner'>\r\n                        <View {...this.props}/>\r\n                    </div>\r\n                </div>\r\n            ) \r\n        }\r\n    }\r\n}\r\n\r\nexport default withPopup;","import React, { Component } from 'react'\r\n\r\n\r\nexport default class MemberDetailForm extends Component {\r\n    maxId = 8000;\r\n    state = {\r\n        userId: ++this.maxId,\r\n        name: '',\r\n        lastName: '',\r\n        direction: 'Java',\r\n        education: 'BSU',\r\n        start: '',\r\n        sex: '',\r\n        birthdate: '',\r\n        address:'',\r\n        mobile: '',\r\n        skype: '',\r\n        telegram: '',\r\n        email: '',\r\n        math: '',\r\n        score: ''\r\n    }\r\n    \r\n    onChange = e => {\r\n        const value = e.target.value;\r\n        const name = e.target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    getAge = (birth) => {\r\n        const date = new Date();\r\n        return date.getFullYear() - birth;\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        const {onItemAdd,closePopup,creator,typeOfItem,typeOfCurrentItem,clearCurrentItem} = this.props;\r\n        const {name, lastName, direction, education, start, birthdate, userId} = this.state;\r\n        const yearOfBirth = birthdate.substring(0,4);\r\n        const userAge = this.getAge(+yearOfBirth);\r\n        const fullName = `${name} ${lastName}`;  \r\n\r\n        onItemAdd(creator, typeOfItem, typeOfCurrentItem, userId, fullName, direction, education, start, userAge);\r\n        closePopup();\r\n        clearCurrentItem('currentMember');\r\n    }\r\n\r\n    onBackToGrid = () => {\r\n        const{closePopup,clearCurrentItem} = this.props;\r\n        closePopup();\r\n        clearCurrentItem('currentMember');\r\n    }\r\n\r\n    // componentDidMount(){\r\n    //     console.log(this.props.currentItem);\r\n    //     if (Object.keys(this.props.currentItem).length !== 0) {\r\n    //         const { name,\r\n    //             direction, \r\n    //             education, start ,\r\n    //             sex,address, mobile, email,score,math,skype,telegram} = this.props.currentItem;\r\n    //         const arrayName = name.split(' ');\r\n          \r\n    //         this.setState({\r\n    //             name: arrayName[0],\r\n    //             lastName: arrayName[1],\r\n    //             direction,\r\n    //             education,\r\n    //             start,\r\n    //             sex,\r\n    //             address,mobile,email,score,math,skype,telegram\r\n    //         });\r\n    //     }\r\n    // }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        // console.log(this.props.currentItem);\r\n        if (this.props.currentItem !== prevProps.currentItem) {\r\n            const { id,name,\r\n                direction, lastName,\r\n                education, start ,birthdate,\r\n                sex,address, mobile, email,score,math,skype,telegram} = this.props.currentItem;\r\n            \r\n            this.setState({\r\n                userId: id,\r\n                name,\r\n                lastName,\r\n                direction,\r\n                education,\r\n                start,\r\n                sex,\r\n                birthdate,\r\n                address,mobile,email,score,math,skype,telegram\r\n            });\r\n        }\r\n      }\r\n\r\n\r\n  render() {\r\n    // console.log(this.state);\r\n    // console.log(this.props.currentItem);\r\n    const {name, lastName, \r\n            direction, \r\n            education, start, \r\n            sex, birthdate,\r\n            address, mobile,\r\n            email,score,\r\n            math,skype,telegram} = this.state;\r\n        \r\n    const {openEdit, openRegister} = this.props;\r\n\r\n    let formTitle;\r\n\r\n    openEdit ? \r\n        formTitle = `${name} ${lastName}`:\r\n            openRegister ? \r\n                formTitle = `Hi, fill the form please` : \r\n                    formTitle = null;\r\n    \r\n    return (\r\n        <form className='form form-members' action=\"\" method='' onSubmit={this.onSubmit}>\r\n            <h3 className='form__title'>{formTitle}</h3>\r\n            <div className='form__fieldsets'>\r\n                <fieldset className='form__fieldset'>\r\n                    <div className='form__group'>\r\n                        <label className='form__label' htmlFor=\"\">Name</label>\r\n                        <input className='form__input'\r\n                            type=\"text\" \r\n                            required\r\n                            name='name' \r\n                            placeholder='Name' \r\n                            value={name}\r\n                            onChange={this.onChange}/>\r\n                    </div>\r\n                    <div className='form__group'>\r\n                        <label className='form__label' htmlFor=\"\">Last Name</label>\r\n                        <input className='form__input'\r\n                            type=\"text\" \r\n                            required\r\n                            name='lastName' \r\n                            placeholder='Last Name' \r\n                            value={lastName}\r\n                            onChange={this.onChange}/>\r\n                    </div>\r\n                    <div className='form__group'>\r\n                        <label className='form__label' htmlFor=\"\">Sex</label>\r\n                        <select className='form__input' name=\"sex\" id=\"\" value={sex} onChange={this.onChange} required>\r\n                            <option value='male'>Male</option>\r\n                            <option value='female'>Female</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className='form__group'>\r\n                        <label className='form__label' htmlFor=\"start\">Date of birth</label>\r\n                        <input className='form__input' type=\"date\" id=\"\" name=\"birthdate\" value={birthdate} onChange={this.onChange} required></input>\r\n                    </div>\r\n                    <div className='form__group'>\r\n                        <label className='form__label' htmlFor=\"\">Address</label>\r\n                        <input className='form__input'\r\n                            type=\"text\" \r\n                            required\r\n                            name='address' \r\n                            placeholder='Address' \r\n                            value={address}\r\n                            onChange={this.onChange}/>\r\n                    </div>\r\n                    <div className='form__group'>\r\n                        <label className='form__label' htmlFor=\"\">Mobile phone</label>\r\n                        <input className='form__input'\r\n                            type=\"tel\" \r\n                            required\r\n                            name='mobile' \r\n                            placeholder='+375-(29)-432-23-12' \r\n                            value={mobile}\r\n                            onChange={this.onChange}/>\r\n                    </div>\r\n                    <div className='form__group'>\r\n                        <label className='form__label' htmlFor=\"\">Email</label>\r\n                        <input className='form__input'\r\n                            type=\"email\" \r\n                            required\r\n                            name='email' \r\n                            placeholder='email-name@globex.com' \r\n                            value={email}\r\n                            onChange={this.onChange}/>\r\n                    </div>\r\n                </fieldset>\r\n                <fieldset className='form__fieldset'>\r\n                <div className='form__group'>\r\n                        <label className='form__label' htmlFor=\"\">Direction</label>\r\n                        <select className='form__input' name=\"direction\" id=\"\" value={direction} onChange={this.onChange} required>\r\n                            <option value='Java'>JAVA</option>\r\n                            <option value='C++'>C++</option>\r\n                            <option value='PHP'>PHP</option>\r\n                            <option value='C#'>C#</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className='form__group'>\r\n                        <label className='form__label' htmlFor=\"\">Education</label>\r\n                        <select  className='form__input' name=\"education\" id=\"\" value={education} onChange={this.onChange} required>\r\n                            <option value='BSU'>BSU</option>\r\n                            <option value='BSUIR'>BSUIR</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className='form__group'>\r\n                        <label className='form__label' htmlFor=\"start\">Date of start</label>\r\n                        <input className='form__input' type=\"date\" id=\"start\" name=\"start\" value={start} onChange={this.onChange} required></input>\r\n                    </div>\r\n                    <div className='form__group'>\r\n                        <label className='form__label' htmlFor=\"\">University Average Score</label>\r\n                        <input className='form__input'\r\n                            type=\"number\" \r\n                            required\r\n                            name='score' \r\n                            placeholder='Your score' \r\n                            value={score}\r\n                            onChange={this.onChange}/>\r\n                    </div>\r\n                    <div className='form__group'>\r\n                        <label className='form__label' htmlFor=\"\">Math Score</label>\r\n                        <input className='form__input'\r\n                            type=\"number\" \r\n                            required\r\n                            name='math' \r\n                            placeholder='Your score' \r\n                            value={math}\r\n                            onChange={this.onChange}/>\r\n                    </div>\r\n                    <div className='form__group'>\r\n                        <label className='form__label' htmlFor=\"\">Skype</label>\r\n                        <input className='form__input'\r\n                            type=\"text\" \r\n                            required\r\n                            name='skype' \r\n                            placeholder='Your username' \r\n                            value={skype}\r\n                            onChange={this.onChange}/>\r\n                    </div>\r\n                    <div className='form__group'>\r\n                        <label className='form__label' htmlFor=\"\">Telegram</label>\r\n                        <input className='form__input'\r\n                            type=\"text\" \r\n                            required\r\n                            name='telegram' \r\n                            placeholder='Your username'\r\n                            value={telegram}\r\n                            onChange={this.onChange}/>\r\n                    </div>\r\n                </fieldset>\r\n            </div>\r\n            <div className='form__btns'>\r\n                <button className='form__btn form__btn_color_save' type='submit'>Save</button>\r\n                <button className='form__btn form__btn_color_back' onClick={this.onBackToGrid}>Back to grid</button>\r\n            </div>\r\n        </form>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class TaskDetailForm extends Component {\r\n    maxId = 9000;\r\n    state = {\r\n        taskId: ++this.maxId,\r\n        name: '',\r\n        description: '',\r\n        startDate: '',\r\n        deadlineDate: '',\r\n        members: {}\r\n    }\r\n    \r\n    onChange = e => {\r\n        const value = e.target.value;\r\n        const name = e.target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    checkedMembers = (members) => {\r\n        let result = [];\r\n        for (let member in members){\r\n            if(members[member]){\r\n                result.push(member);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n\r\n    onChangeCheck = (e) => {\r\n        this.setState({\r\n            members: {...e}\r\n        });\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        const {onItemAdd,closePopup,creator,typeOfItem,typeOfCurrentItem,clearCurrentItem,addUserTasks} = this.props;\r\n        const {name, description, startDate, deadlineDate, taskId, members} = this.state;\r\n        onItemAdd(creator,typeOfItem,typeOfCurrentItem, taskId,name, description,startDate, deadlineDate);\r\n        const checkedMembers = this.checkedMembers(members);\r\n        if(checkedMembers.length !== 0){\r\n            checkedMembers.forEach(member => {\r\n                const task = {id: {userId: +member,taskId},taskName:name,startDate,deadlineDate, state: 'Active'};\r\n                addUserTasks(task);\r\n            });\r\n        }\r\n        closePopup();\r\n        clearCurrentItem('currentTask');\r\n    }\r\n\r\n    onBackToGrid = () => {\r\n        const {closePopup,clearCurrentItem} = this.props;\r\n        closePopup();\r\n        clearCurrentItem('currentTask');\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        const {checkedUsers} = this.props;\r\n        this.setState({members:checkedUsers});\r\n        // if (Object.keys(this.props.currentItem).length !== 0) {\r\n        //     const { task, start, deadline } = this.props.currentItem;\r\n        //     this.setState({\r\n        //         task,\r\n        //         start,\r\n        //         deadline\r\n        //     });\r\n        // }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {    \r\n        if (this.props.currentItem !== prevProps.currentItem) {\r\n            const {id, name, description, startDate, deadlineDate } = this.props.currentItem;\r\n            this.setState({\r\n                taskId:id,\r\n                name,\r\n                description,\r\n                startDate,\r\n                deadlineDate\r\n            });\r\n        };\r\n    }\r\n    \r\n    \r\n  render() {\r\n    // console.log(this.state.members);\r\n    const {name, description, startDate, deadlineDate, members} = this.state;\r\n\r\n    const {openEdit, openCreate,membersManage} = this.props;\r\n\r\n    let formTitle;\r\n\r\n    openEdit ? \r\n        formTitle = `Task - ${name}`:\r\n            openCreate ? \r\n                formTitle = `Hi, fill the form please` : \r\n                    formTitle = null;\r\n\r\n    return (\r\n       \r\n        <form className='form form__task' action=\"\" method='' onSubmit={this.onSubmit}>\r\n            <h3 className='form__title'>{formTitle}</h3>\r\n            <fieldset className='form__fieldset'>\r\n                <div className='form__group'>\r\n                    <label className='form__label' htmlFor=\"\">Name</label>\r\n                    <input className='form__input'\r\n                        type=\"text\" \r\n                        id=\"task-name\" \r\n                        name='name' \r\n                        placeholder='Task name'\r\n                        value={name} \r\n                        onChange={this.onChange} \r\n                        required />\r\n                </div>\r\n                <div className='form__group'>\r\n                    <label className='form__label' htmlFor=\"\">Description</label>\r\n                    <textarea className='form__input form__area'\r\n                        rows=\"4\" \r\n                        cols=\"50\" \r\n                        name='description'\r\n                        placeholder='Description of task'\r\n                        value={description} \r\n                        onChange={this.onChange} \r\n                        required>\r\n                    </textarea>\r\n                </div>\r\n                <div className='form__group'>\r\n                    <label className='form__label' htmlFor=\"start\">Start</label>\r\n                    <input className='form__input'\r\n                        type=\"date\" \r\n                        id=\"\" \r\n                        name=\"startDate\" \r\n                        value={startDate} \r\n                        onChange={this.onChange} \r\n                        required></input>\r\n                </div>\r\n                <div className='form__group'>\r\n                    <label className='form__label' htmlFor=\"start\">Deadline</label>\r\n                    <input className='form__input'\r\n                        type=\"date\" \r\n                        id=\"\" \r\n                        name=\"deadlineDate\" \r\n                        value={deadlineDate}\r\n                        onChange={this.onChange} \r\n                        required></input>\r\n                </div>\r\n                <div className='form__group'>\r\n                    <h5>Members</h5>\r\n                    <CheckMembers membersManage={membersManage} \r\n                                    members={members} \r\n                                    onChange={this.onChangeCheck}/>\r\n                </div>             \r\n                \r\n            </fieldset>\r\n            <div className='form__btns'>\r\n                <button className='form__btn form__btn_color_save' type='submit'>Save</button>\r\n                <button className='form__btn form__btn_color_back' onClick={this.onBackToGrid}>Back to grid</button>\r\n            </div>\r\n        </form>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nconst CheckMembers = ({membersManage,onChange, members}) => {\r\n    \r\n    let checkMembers = membersManage.reduce((result,{id}) => {\r\n        return {...result,[id] : !!members[id]}\r\n    },{});\r\n    const checkMembersChange = (id) => () => {\r\n        checkMembers[id] = !checkMembers[id];\r\n        onChange(checkMembers)\r\n    }\r\n    \r\n    const checks = membersManage.map((member) => {\r\n        const {name,id} = member;\r\n        \r\n        return  <div key={id}>\r\n                    <label htmlFor=\"\">{name}</label>\r\n                    <input type=\"checkbox\" name={id} \r\n                        checked={checkMembers[id]} \r\n                        onChange={checkMembersChange(id)}/><br/>\r\n                </div> ;\r\n      });\r\n      \r\n    return (\r\n      <div className='members-check-list'>{checks}</div>\r\n    )\r\n  }\r\n\r\n//   onChange(e = {}, taskId) {\r\n//     this.state.members = this.state.members.map(member => {\r\n//        const isChecked = e[member.id];\r\n//        const isPreviousCheckedValue = !!member.tasks.find(id => id === taskId);\r\n//        if (isChecked !== isPreviousCheckedValue) {\r\n//            const tasks = isChecked ? [...member.tasks, taksId] : member.tasks.filter(taks => task !== taskId);\r\n//            return {...member, tasks}\r\n//        }\r\n//        return member;\t\r\n//    })\r\n//    }\r\n   \r\n   \r\n//    ({taskId, managedMembers, onChange})\r\n//    // tasks - массив из айдишек тасок, привязанных к юзеру на момент открытия попапа\r\n//    let checksdMembers = managedMembers.reduce((result, {id, tasks}) => {\r\n//        const = defaultIsChecked = tasks.find((membertaskId) => memberTaskId === taskId) !== undefined;\r\n//        return {...result, [id]: defaultIsChecked};\r\n//    }, {})\r\n   \r\n   \r\n   \r\n//    ({task, managedMembers, onChange})\r\n//    // users - массив из айдишек юзеров, привязанных к такске на момент открытия попапа\r\n//    let checksdMembers = managedMembers.reduce((result, {id}) => {\r\n//        const {users = []} = task;\r\n//        const = defaultIsChecked = users.find((userId) => userId === id) !== undefined;\r\n//        return {...result, [id]: defaultIsChecked};\r\n//    }, {})","import React, { Component } from 'react'\r\n\r\nexport default class TaskTrackDetailForm extends Component {\r\n    uniqId = 200;\r\n    state = {\r\n        taskTrackId: ++ this.uniqId,\r\n        taskName: '',\r\n        trackNote: '',\r\n        trackDate: ''\r\n    }\r\n    \r\n    onChange = e => {\r\n        const value = e.target.value;\r\n        const name = e.target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        const {onItemAdd,closePopup,creator,typeOfItem,typeOfCurrentItem,clearCurrentItem,currentTrackId} = this.props;\r\n        console.log(currentTrackId);\r\n        const {userId,taskId} = currentTrackId;\r\n        const {taskName, trackDate, trackNote,taskTrackId} = this.state;\r\n        onItemAdd(creator,typeOfItem,typeOfCurrentItem,userId,taskId,taskTrackId,taskName, trackNote, trackDate);\r\n        closePopup();\r\n        clearCurrentItem('currentTrack');\r\n    }\r\n\r\n    onBackToGrid = () => {\r\n        const {closePopup,clearCurrentItem} = this.props;\r\n        closePopup();\r\n        clearCurrentItem('currentTrack');\r\n    }\r\n\r\n    // componentDidMount(){\r\n    //     if (Object.keys(this.props.currentItem).length !== 0) {\r\n    //         const { taskName, trackDate, trackNote} = this.props.currentItem;\r\n    //         this.setState({\r\n    //             taskName,\r\n    //             trackDate,\r\n    //             trackNote\r\n    //         });\r\n    //     }\r\n    // }\r\n\r\n    componentDidUpdate(prevProps) {    \r\n        if (this.props.currentItem !== prevProps.currentItem) {\r\n            const { taskName, trackDate, trackNote} = this.props.currentItem;\r\n            this.setState({\r\n                taskName,\r\n                trackDate,\r\n                trackNote\r\n            });\r\n        };\r\n    }\r\n\r\n  render() {\r\n\r\n    const {taskName, trackDate, trackNote} = this.state;\r\n    const {openEdit,openTrack} =this.props;\r\n    let formTitle;\r\n\r\n    openEdit ? \r\n        formTitle = `Track - ${taskName}`:\r\n            openTrack ? \r\n                formTitle = `Hi, fill the form please` : \r\n                    formTitle = null;\r\n\r\n    return (\r\n        <form className='form form__track' action=\"\" method='' onSubmit={this.onSubmit}>\r\n            <h3 className='form__title'>{formTitle}</h3>\r\n            <fieldset className='form__fieldset'>  \r\n                <div className='form__group'>\r\n                    <label className='form__label' htmlFor=\"track-date\">Name</label>\r\n                    <input className='form__input' type=\"text\" \r\n                        id=\"track-name\" \r\n                        name=\"taskName\" \r\n                        value={taskName}\r\n                        onChange={this.onChange} \r\n                        required></input>\r\n                </div>\r\n                <div className='form__group'>\r\n                    <label className='form__label' htmlFor=\"track-date\">Date</label>\r\n                    <input className='form__input' type=\"date\" \r\n                        id=\"track-date\" \r\n                        name=\"trackDate\" \r\n                        value={trackDate}\r\n                        onChange={this.onChange} \r\n                        required></input>\r\n                </div>\r\n                <div className='form__group'>\r\n                    <label className='form__label' htmlFor=\"\">Note</label>\r\n                    <textarea className='form__input form__area'\r\n                        rows=\"4\" \r\n                        cols=\"50\" \r\n                        name='trackNote' \r\n                        value={trackNote}\r\n                        onChange={this.onChange} \r\n                        required></textarea>\r\n                </div>\r\n            </fieldset>\r\n            <div className='form__btns'>\r\n                <button className='form__btn form__btn_color_save' type='submit'>Save</button>\r\n                <button className='form__btn form__btn_color_back' onClick={this.onBackToGrid}>Back to grid</button>\r\n            </div>\r\n        </form>\r\n    )\r\n  }\r\n}\r\n\r\n","import withPopup from '../hoc-helpers';\r\n\r\nimport MemberDetailForm from './member-detail-form';\r\nimport TaskDetailForm from './task-detail-form';\r\nimport TaskTrackDetailForm from './task-track-detail-form';\r\n\r\nimport './forms.scss';\r\n\r\nconst MemberForm = withPopup(MemberDetailForm);\r\nconst TaskForm = withPopup(TaskDetailForm);\r\nconst TaskTrackForm = withPopup(TaskTrackDetailForm);\r\n\r\n\r\nexport {MemberForm,TaskForm,TaskTrackForm};","export default class DummyService {\r\n\r\n    \r\n    users = [\r\n        { userId: 1, name:'Jhon Jhonnov', direction:'Java', education:'BSU',start:'2004-04-04', age:'19'},\r\n        { userId: 2, name:'ALex Alexov', direction:'C++', education:'BSUIR',start:'2005-05-05', age:'20'},\r\n    ];\r\n\r\n    fullUsers = [\r\n        {   userId: 1, direction: 'Java', name: 'Jhon', \r\n            email: 'jhon@gmail.com', lastName: 'Jhonov', sex: 'male', \r\n            education: 'BSU', birthdate: '1999-01-01', score: '20', \r\n            math: '30', address: 'ul.Pushkina 22', mobile: '121-32-32', \r\n            skype:'skype_jhon', start:'2004-04-04', telegram:'@telega' },\r\n        {   userId: 2, direction: 'C++', name: 'Alex', \r\n            email: 'alex@gmail.com', lastName: 'Alexov', sex: 'male', \r\n            education: 'BSUIR', birthdate: '1993-05-05', score: '50', \r\n            math: '10', address: 'ul.Pushkina 42', mobile: '321-32-32', \r\n            skype:'skype_alex', start:'2004-05-05', telegram:'@telega_alex' }\r\n    ];\r\n\r\n    tasks = [{taskId: 3, name: 'Create the DB', \r\n            description:'description of create the DB', \r\n            startDate:'2004-01-01', deadlineDate:'2001-01-01'},\r\n            {taskId: 4, name: 'Implement the proc', \r\n            description:'description of implement the proc', \r\n            startDate:'2001-03-01', deadlineDate:'2001-03-05'},\r\n            {taskId: 5, name: 'Create task #1', \r\n            description:'description of create task #1', \r\n            startDate:'2001-05-01', deadlineDate:'2001-05-01'},\r\n            {taskId: 6, name: 'Create task #2', \r\n            description:'description of create task #2', \r\n            startDate:'2002-05-01', deadlineDate:'2002-05-01'},\r\n        ];\r\n\r\n    userTasks = [\r\n        {userId: 1, taskId: 3, taskName:'Create the DB', \r\n        startDate: '2004-01-01', deadlineDate:'2001-01-01', state:'Active'},\r\n        {userId: 1, taskId: 4, taskName:'Implement the proc', \r\n        startDate: '2001-03-01', deadlineDate:'2001-03-05', state:'Active'},\r\n        {userId: 2, taskId: 5, taskName:'Create task #1', \r\n        startDate: '2001-05-01', deadlineDate:'2001-05-01', state:'Active'},\r\n        {userId: 2, taskId: 6, taskName:'Create task #2', \r\n        startDate: '2002-05-01', deadlineDate:'2002-05-01', state:'Active'},\r\n    ];\r\n\r\n    userProgresses = [\r\n        {userId:1, taskId: 3, taskName:'create the DB', trackNote:'implemented the TaskState table', trackDate:'2001-05-01'},\r\n        {userId:1, taskId: 3, taskName:'create the DB', trackNote:'created the Mamber view', trackDate:'2001-05-01'},\r\n        {userId:1, taskId: 4, taskName:'implement the proc', trackNote:'implemented the calc progress proc', trackDate:'2001-05-01'},\r\n        {userId:2, taskId: 5, taskName:'implement subtask #1', trackNote:'implement subtask #1 - note', trackDate:'2001-05-01'},\r\n        {userId:2, taskId: 5, taskName:'implement subtask #1-1', trackNote:'implement subtask #1-1 - note', trackDate:'2001-05-01'},\r\n        {userId:2, taskId: 6, taskName:'implement subtask #2', trackNote:'implement subtask #2 - note', trackDate:'2001-05-01'}\r\n    ];\r\n\r\n    taskTracks = [\r\n        {userId:1, taskId:3, trackId:50, taskName:'create the DB', trackNote:'Today i was working hard on ...', trackDate:'2001-05-01'},\r\n        {userId:1, taskId:3, trackId:51, taskName:'Implement the procs', trackNote:`I've finished the proc...`, trackDate:'2001-05-01'},\r\n        {userId:1, taskId:4, trackId:52, taskName:'create the note #1', trackNote:'Today i was working easy on ...', trackDate:'2001-05-01'},\r\n        {userId:1, taskId:4, trackId:53, taskName:'create the note #2', trackNote:`I've finished the work...`, trackDate:'2001-05-01'},\r\n        {userId:2, taskId:5, trackId:54, taskName:'create the something', trackNote:'Today i was working hard on ...', trackDate:'2001-05-01'},\r\n        {userId:2, taskId:5, trackId:55, taskName:'Implement the something', trackNote:`I've finished the proc...`, trackDate:'2001-05-01'},\r\n        {userId:2, taskId:6, trackId:56, taskName:'create the something #1', trackNote:'Today i was working easy on ...', trackDate:'2001-05-01'},\r\n        {userId:2, taskId:6, trackId:57, taskName:'create the something #2', trackNote:`I've finished the work...`, trackDate:'2001-05-01'},\r\n    ];\r\n\r\n    tracks = [\r\n        {trackId:50, taskName:'create the DB', trackNote:'Today i was working hard on ...', trackDate:'2001-05-01'},\r\n        {trackId:51, taskName:'Implement the procs', trackNote:`I've finished the proc...`, trackDate:'2001-05-01'},\r\n        {trackId:52, taskName:'create the note #1', trackNote:'Today i was working easy on ...', trackDate:'2001-05-01'},\r\n        {trackId:53, taskName:'create the note #2', trackNote:`I've finished the work...`, trackDate:'2001-05-01'},\r\n        {trackId:54, taskName:'create the something', trackNote:'Today i was working hard on ...', trackDate:'2001-05-01'},\r\n        {trackId:55, taskName:'Implement the something', trackNote:`I've finished the proc...`, trackDate:'2001-05-01'},\r\n        {trackId:56, taskName:'create the something #1', trackNote:'Today i was working easy on ...', trackDate:'2001-05-01'},\r\n        {trackId:57, taskName:'create the something #2', trackNote:`I've finished the work...`, trackDate:'2001-05-01'},\r\n    ]\r\n    \r\n\r\n    getTrack = async (id) => {\r\n        return this.tracks.find(item => item.trackId === id.trackId);  \r\n    }\r\n\r\n\r\n    getTaskTracks = async () => {\r\n        return this.taskTracks;\r\n    }\r\n\r\n    getUserProgress = async () => {\r\n        return this.userProgresses;\r\n    }\r\n\r\n    getUserTasks = async () => {\r\n        return this.userTasks;\r\n    }\r\n\r\n    getTasks = async () => {\r\n        return this.tasks;\r\n    };\r\n\r\n    getTask = async (id) => {\r\n        return this.tasks.find(item => item.taskId === id);  \r\n    };\r\n\r\n    getUsers = async () => {\r\n        return this.users;\r\n    };\r\n  \r\n    getUser = async (id) => {\r\n        return this.fullUsers.find(item => item.userId === id);\r\n    };\r\n\r\n  }\r\n  ","import App from \"./app\";\r\n\r\nexport default App;\r\n","import React, { Component } from \"react\";\r\n\r\n\r\nimport Entry from '../entry';\r\nimport Table from '../table';\r\nimport Header from '../header';\r\nimport {Members, Tasks, MembersTask, Progress, Track, Welcome} from '../pages';\r\n\r\nimport {MemberForm,TaskForm,TaskTrackForm} from '../forms';\r\n\r\nimport {ControlTaskTracksManage} from '../controls';\r\n\r\nimport DummyService from '../../services/dummy-service';\r\n\r\nimport \"./app.scss\";\r\n\r\nimport {BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nexport default class App extends Component {\r\n\r\n    maxId = 100;\r\n\r\n    state = {\r\n        service: new DummyService(),\r\n        isAdmin: true,\r\n        showPopup: false,\r\n        openRegister: false,\r\n        openEditReg: false,\r\n        openEditCrt: false,\r\n        openCreate: false,\r\n        openTrack: false,\r\n        openEditTrack: false,\r\n        currentTrackId:{},\r\n        currentUserTrack: [],\r\n        currentMemberProgress: [],\r\n        currentUserName: '',\r\n        currentUserTasks: [],\r\n        currentMember: {},\r\n        currentTask: {},\r\n        currentTrack:{},\r\n        membersManage: [],\r\n        tasksManage:[],\r\n        memberProgress: [],\r\n        membersTaskManage:[],\r\n        taskTracksManage: [],\r\n        checkedUsers: {},\r\n    }\r\n\r\n    componentDidMount(){    \r\n        const {service} = this.state;\r\n        const users = service.getUsers();\r\n        const tasks = service.getTasks();\r\n        const userTasks = service.getUserTasks();\r\n        const userProgress = service.getUserProgress();\r\n        const taskTracks = service.getTaskTracks();\r\n\r\n        users.then((res) => {\r\n            const renameId = res.map((item) =>{\r\n              const{userId, ...property} = item;\r\n              return {'id': userId, ...property}\r\n            });\r\n            this.setState({ membersManage: renameId});\r\n        });\r\n        tasks.then((res) => {\r\n            const renameId = res.map((item) =>{\r\n              const{taskId, ...property} = item;\r\n              return {'id': taskId, ...property}\r\n            });\r\n            this.setState({ tasksManage: renameId});\r\n        });\r\n        userTasks.then((res) => {\r\n            const renameId = res.map((item) =>{\r\n              const{userId,taskId, ...property} = item;\r\n              return {'id':{'taskId':taskId, 'userId':userId} , ...property}\r\n            });\r\n            this.setState({ membersTaskManage: renameId});\r\n        });\r\n        userProgress.then((res) => {\r\n            const renameId = res.map((item) =>{\r\n                const{userId,taskId, ...property} = item;\r\n                return {'id':{'taskId':taskId, 'userId':userId} , ...property}\r\n            });\r\n            this.setState({ memberProgress: renameId});\r\n        });\r\n        taskTracks.then((res) => {\r\n            const renameId = res.map((item) =>{\r\n                const{userId,taskId,trackId, ...property} = item;\r\n                return {'id':{'taskId':taskId, 'userId':userId, 'trackId':trackId} , ...property}\r\n            });\r\n            this.setState({ taskTracksManage: renameId});\r\n        });\r\n    }\r\n\r\n    getCurrentTrackId = (id) => {\r\n        this.setState({ currentTrackId: id});\r\n    }\r\n\r\n    getUserTrack = (id) => {\r\n        const {taskTracksManage} = this.state;\r\n        const userTrack = taskTracksManage.filter((task) => {\r\n            return task.id.taskId === id;\r\n        });\r\n        this.setState({ currentUserTrack: userTrack});\r\n    }\r\n\r\n    getUserProgress = (id) => {\r\n        const {memberProgress} = this.state;\r\n        const userProgress = memberProgress.filter((progress) => {\r\n            return progress.id.userId === id;\r\n        });\r\n        this.setState({ currentMemberProgress: userProgress});\r\n    }\r\n\r\n    getUserTasks = (id) => {\r\n        const {membersTaskManage} = this.state;\r\n        const userTasks = membersTaskManage.filter((task) => {\r\n            return task.id.userId === id;\r\n        });\r\n        this.setState({ currentUserTasks: userTasks});\r\n    }\r\n\r\n    getUserName = (id) => {\r\n        const {membersManage} = this.state;\r\n        const user = membersManage.find((user) => {\r\n            return user.id === id;\r\n        });\r\n        this.setState({ currentUserName: user.name});\r\n    }\r\n\r\n    toggleStatus = (id,status) => {\r\n        const {currentUserTasks} = this.state;\r\n        const task = currentUserTasks.find((task) =>{\r\n            return task.id.taskId === id\r\n        });\r\n        task.state = status;\r\n        const editTasks = currentUserTasks.map((item) => {\r\n            return item.id.taskId === task.id.taskId ? task : item;\r\n        });\r\n        this.setState({ currentUserTasks: editTasks});\r\n    }\r\n\r\n    getTaskId = (id) => {\r\n        const {membersTaskManage} = this.state;\r\n        const checkedUsers = {};\r\n        membersTaskManage.forEach((task) => {\r\n            if(task.id.taskId === id){\r\n                checkedUsers[task.id.userId] = true;\r\n            }\r\n        });\r\n        this.setState({ checkedUsers });\r\n    }   \r\n\r\n    addUserTasks = (task) => {\r\n        this.setState((state) => {\r\n            return { membersTaskManage : [...state.membersTaskManage,task] };\r\n        });\r\n    }\r\n\r\n    onItemAdd = (creator, typeOfItems, typeOfCurrentItem, ...property) => {\r\n        this.setState((state) => {\r\n            const item = creator(...property);\r\n            if (Object.keys(state[typeOfCurrentItem]).length !== 0) {\r\n                const items = state[typeOfItems].map(editItem => {\r\n                    return editItem.id === state[typeOfCurrentItem].id ? item : editItem;\r\n                });\r\n                return {[typeOfItems] : [...items]};\r\n              }\r\n            return { [typeOfItems]: [...state[typeOfItems], item] };\r\n        });\r\n\r\n    }\r\n\r\n    onItemDelete = (id,type) => {\r\n        this.setState((state) => {\r\n            const idx = state[type].findIndex((item) => item.id === id);\r\n            const items = [\r\n                ...state[type].slice(0, idx),\r\n                ...state[type].slice(idx + 1)\r\n            ];\r\n            return { [type] : [...items] };\r\n        });\r\n    }\r\n\r\n    onItemEdit = (id, items, typeOfCurrentItem) => {\r\n        // const currentItem = items.find(item => item.id === id);\r\n        // console.log(id);\r\n        const {service} = this.state;\r\n        let data;\r\n        \r\n        \r\n        typeOfCurrentItem === 'currentTrack' ?\r\n            data = service.getTrack(id) :\r\n                typeOfCurrentItem === 'currentMember' ?\r\n                    data = service.getUser(id) :\r\n                        typeOfCurrentItem === 'currentTask' ?\r\n                            data = service.getTask(id) : data = null;\r\n        \r\n        data.then((result) => {\r\n           \r\n            console.log(result);\r\n            let remaneIdObj;\r\n            if (typeOfCurrentItem === 'currentMember'){\r\n                const {userId, ...property} = result;\r\n                remaneIdObj = {id:userId, ...property}\r\n            }\r\n            if (typeOfCurrentItem === 'currentTask'){\r\n                const {taskId, ...property} = result;\r\n                remaneIdObj = {id:taskId, ...property}\r\n            }\r\n            if (typeOfCurrentItem === 'currentTrack'){\r\n                const {trackId, ...property} = result;\r\n                remaneIdObj = {id:trackId, ...property}\r\n            }\r\n            \r\n            this.setState({ [typeOfCurrentItem]: remaneIdObj});\r\n        })\r\n        // this.setState({ [typeOfCurrentItem] : currentItem });\r\n    }\r\n\r\n    clearCurrentItem = (typeOfCurrentItem) =>{\r\n        this.setState({ [typeOfCurrentItem]: {} });\r\n    }\r\n\r\n    createTask(taskId,name,description, startDate, deadlineDate) {\r\n        return {\r\n          id: taskId,\r\n          name,\r\n          description,\r\n          startDate,\r\n          deadlineDate\r\n        };\r\n    }\r\n\r\n    createMember(userId, name, direction, education, start, age) {\r\n        return {\r\n          id: userId,\r\n          name,\r\n          direction,\r\n          education,\r\n          start,\r\n          age\r\n        };\r\n    }\r\n\r\n    createTrack(userId,taskId,trackId,taskName, trackNote, trackDate) {\r\n        return {\r\n          id:{\r\n            userId,\r\n            taskId,\r\n            trackId\r\n          },\r\n          taskName,\r\n          trackNote,\r\n          trackDate\r\n        };\r\n    }\r\n\r\n    togglePopup = (form) => {\r\n        this.setState((state) => {\r\n            const showPopup = !state.showPopup;\r\n            let openRegister,openCreate,openTrack,openEditReg,openEditCrt,openEditTrack;\r\n            form === 'editTrack' ? \r\n                openEditTrack = !state.openEditTrack : \r\n                    form === 'editCrt' ? \r\n                        openEditCrt = !state.openEditCrt : \r\n                            form === 'member' ? \r\n                                openRegister = !state.openRegister : \r\n                                    form === 'editReg' ? \r\n                                        openEditReg = !state.openEditReg : \r\n                                            form === 'task' ? \r\n                                                openCreate = !state.openCreate :\r\n                                                    form === 'track' ? \r\n                                                        openTrack = !state.openTrack : openCreate = false;\r\n            return {showPopup,openRegister,openCreate,openTrack,openEditReg,openEditCrt,openEditTrack};\r\n        })\r\n      }\r\n\r\n    \r\n\r\n    render() {\r\n        console.log(this.state);\r\n        const {membersManage, tasksManage,\r\n            memberProgress, membersTaskManage,\r\n            taskTracksManage, isAdmin,\r\n            showPopup, openRegister,\r\n            openCreate, openTrack,\r\n            currentMember, currentTask, openEditTrack,\r\n            currentTrack, openEditReg, currentUserTasks,\r\n            currentUserName, getUserProgress, currentMemberProgress,\r\n            currentUserTrack,currentTrackId,openEditCrt,checkedUsers } = this.state;\r\n        \r\n        const memberForm = <MemberForm closePopup={this.togglePopup} \r\n                                onItemAdd={this.onItemAdd}\r\n                                typeOfItem='membersManage'\r\n                                typeOfCurrentItem='currentMember'\r\n                                currentItem={currentMember}\r\n                                clearCurrentItem={this.clearCurrentItem}\r\n                                creator={this.createMember.bind(this)}\r\n                                openEdit={openEditReg} openRegister={openRegister}/>;\r\n\r\n        const taskForm = <TaskForm closePopup={this.togglePopup} \r\n                                onItemAdd={this.onItemAdd}\r\n                                typeOfItem='tasksManage'\r\n                                typeOfCurrentItem='currentTask'\r\n                                currentItem={currentTask}\r\n                                clearCurrentItem={this.clearCurrentItem}\r\n                                creator={this.createTask.bind(this)}\r\n                                openEdit={openEditCrt} openCreate={openCreate}\r\n                                membersManage={membersManage}\r\n                                addUserTasks={this.addUserTasks}\r\n                                checkedUsers={checkedUsers}/> ;\r\n\r\n        const trackForm = <TaskTrackForm closePopup={this.togglePopup}\r\n                                onItemAdd={this.onItemAdd}\r\n                                typeOfItem='taskTracksManage'\r\n                                typeOfCurrentItem='currentTrack'\r\n                                currentItem={currentTrack}\r\n                                clearCurrentItem={this.clearCurrentItem}\r\n                                creator={this.createTrack.bind(this)}\r\n                                currentTrackId={currentTrackId}\r\n                                openEdit={openEditTrack} openTrack={openTrack}/>;\r\n\r\n        \r\n        // const animation = setInterval(this.changeTriangles,2000);\r\n       \r\n        \r\n\r\n        return (\r\n            <Router>\r\n                <div className='wrapper'>\r\n                    <main className='main-content'>\r\n                        <Header />\r\n                        <div className='container'>\r\n                            <Switch>\r\n                                <Route path='/' render={() =><Welcome />} exact />\r\n                                \r\n                                <Route path='/members' render={() =><Members membersManage={membersManage}\r\n                                                                        togglePopup={this.togglePopup}\r\n                                                                        onItemDelete={this.onItemDelete}\r\n                                                                        onItemEdit={this.onItemEdit}\r\n                                                                        getUserTasks={this.getUserTasks}\r\n                                                                        getUserName={this.getUserName}\r\n                                                                        getUserProgress={this.getUserProgress}/>} />\r\n                                <Route path='/tasks' render={() =><Tasks tasksManage={tasksManage}\r\n                                                                        togglePopup={this.togglePopup}\r\n                                                                        onItemDelete={this.onItemDelete}\r\n                                                                        onItemEdit={this.onItemEdit}\r\n                                                                        getTaskId={this.getTaskId}\r\n                                                                        clearCurrentItem={this.clearCurrentItem}/>} />\r\n                                <Route path='/user-tasks' render={() =><MembersTask data={currentUserTasks} \r\n                                                                        currentUserName={currentUserName}\r\n                                                                        toggleStatus={this.toggleStatus}\r\n                                                                        togglePopup={this.togglePopup}\r\n                                                                        getUserTrack={this.getUserTrack}\r\n                                                                        getCurrentTrackId={this.getCurrentTrackId}/>} />\r\n                                <Route path='/user-progress' render={() =><Progress memberProgress={currentMemberProgress} \r\n                                                                        currentUserName={currentUserName}/>} />\r\n                                <Route path='/user-track' render={() =><Track currentUserTrack={currentUserTrack} \r\n                                                                        onItemDelete={this.onItemDelete}\r\n                                                                        onItemEdit={this.onItemEdit}\r\n                                                                        togglePopup={this.togglePopup}/>} />\r\n                                                                        \r\n                                                                        \r\n                            </Switch>\r\n                            \r\n                            {(showPopup && openEditTrack) ? \r\n                                trackForm :\r\n                                    (showPopup && openEditCrt) ? \r\n                                        taskForm :\r\n                                            (showPopup && openRegister) ? \r\n                                                memberForm :\r\n                                                    (showPopup && openEditReg) ? \r\n                                                        memberForm :\r\n                                                            (showPopup && openCreate) ? \r\n                                                                taskForm : \r\n                                                                    (showPopup && openTrack) ? \r\n                                                                        trackForm : null}\r\n                        </div>\r\n                        </main>\r\n                </div>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nimport './style/index.scss'\n\nconst root = document.getElementById(\"root\");\n\nReactDOM.render(<App />, root);"],"sourceRoot":""}